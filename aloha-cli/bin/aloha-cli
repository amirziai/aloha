#!/usr/bin/env bash

# =================================================================================================
#  aloha-cli                                                                 R. M. Deak 2015-06-25
# =================================================================================================
#
# Example of usage from the aloha root directory:
#
#   # Compile the code and test code.  Test code for protobuf java classes.
#   sbt compile test:compile
#
#   # create cachedir
#   mkdir -p /tmp/aloha-cache-dir
#
#   # This is two base64-encoded protos
#   (echo "CAESBEFsYW4YASUAALhBKg0IARABGQAAAAAAAPA/Kg0IAhACGQAAAAAAAABA"
#    echo "CAESBEthdGUYAioNCAMQAxkAAAAAAAAIQA==") \
#   |\
#   $PWD/aloha-cli/bin/aloha-cli \
#     -cp "$PWD/aloha-io-proto/target/scala-2.11/test-classes:$PWD/aloha-core/target/scala-2.11/test-classes" \
#     --dataset \
#     --cachedir /tmp/aloha-cache-dir \
#       -s $(find $PWD -name 'proto_spec1.js' | head -n1)       \
#     -p com.eharmony.aloha.test.proto.Testing.UserProto \
#     --vw -
#
# Prints to STDOUT:
#
#   | name=Alan gender=MALE bmi:23 num_photos:2
#   | name=Kate gender=FEMALE bmi=UNK num_photos
#
# =================================================================================================

# From Stack Overflow: "Preserving quotes in bash function parameters"
# Q: http://stackoverflow.com/questions/3260920/preserving-quotes-in-bash-function-parameters
# A: http://stackoverflow.com/a/24179878
function requote() {
    local res=""
    for x in "$@" ; do
        # try to figure out if quoting was required for the $x:
        grep -q "[[:space:]]" <<< "$x" && res="${res} '${x}'" || res="${res} ${x}"
    done
    # remove first space and print:
    sed -e 's/^ //' <<< "${res}"
}

usage() {
(cat <<EOM
usage: aloha-cli -cp /path/to/some.jar:/path/to/other.jar:... [args to CLI]
EOM
) >&2
}

# Find classpath file.  If it doesn't exist, get the classpath from SBT
# and create the file and use it.  For now, just can SBT every time.
# VERY SLOW
CP=$(sbt "export runtime:fullClasspath" | tail -n1)

if [[ "$#" -lt 2 ]]; then
    usage; exit 2
elif [[ "$1" == '-cp' ]]; then
    CP=$CP:$2
    shift 2
else
    usage; exit 3
fi

# echo java -cp $CP com.eharmony.aloha.cli.Cli $@

# I hate eval but whatever.
ARGS=$(requote "$@")
COMMAND="java -cp $CP com.eharmony.aloha.cli.Cli $ARGS"
eval $COMMAND
